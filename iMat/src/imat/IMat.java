package imat;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.LinkedList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.AbstractButton;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.UIManager;
import se.chalmers.ait.dat215.project.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author filip
 */
public class IMat extends javax.swing.JFrame implements ShoppingCartListener {
    
    public static IMatDataHandler dataHandler = IMatDataHandler.getInstance();
    
    private ProductCategoryPanel productCategoryPanel;
    private DetailPanel detailPanel;
    private boolean cartShowing = true;
    private boolean listShowing = true;
    private LinkedList<ActionEvent> previousCards =  new LinkedList<>();
    private LinkedList<ActionEvent> nextCards =  new LinkedList<>();
    private LinkedList<ShoppingItem> lastAdded = new LinkedList<>();
    private LinkedList<ShoppingItem> lastRemoved = new LinkedList<>();

    private int currentCategoryIndex;
    
    /**
     * Creates new form IMat
     */
    public IMat() {
        initComponents();        
        
        //Saves data when application is terminated
        Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
            public void run() {
                    dataHandler.shutDown();
            }
        }));

        this.setExtendedState(this.MAXIMIZED_BOTH);
        dataHandler.getShoppingCart().addShoppingCartListener(this);
        updateCartLabels();
        homeButton.requestFocus();
        
        this.cartLayeredPanel.add(new ProductListPanel());
        
        this.productCategoryPanel = new ProductCategoryPanel();
        this.detailPanel = new DetailPanel();

        cardCartListLayeredPane.moveToFront(cardPanel);
        
        FilterFactory.createFilterCards();
                
        this.cardPanel.add(this.productCategoryPanel, "productCategoryPanel");
        this.cardPanel.add(new ProfilePanel(), "profilePanel");
        this.cardPanel.add(new HintsPanel(), "hintsPanel");
        this.cardPanel.add(new RecipePanel(), "recipePanel");
        this.cardPanel.add(new WelcomePanel(), "welcomePanel");
        this.cardPanel.add(new CheckoutPanel(), "checkoutPanel");
        this.cardPanel.add(detailPanel, "detailPanel");
        
        closeClosablePanels();
        
        homeButton.doClick();
        setPrevious(false);
        setNext(false);
        undo.setEnabled(false);
        redo.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        globalNavigationButtonGroup = new javax.swing.ButtonGroup();
        closeablePanelsButtonGroup = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        headerPanel = new javax.swing.JPanel();
        logotype = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(60, 0), new java.awt.Dimension(60, 0), new java.awt.Dimension(60, 0));
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        hintsToggleButton = new javax.swing.JToggleButton();
        favoritesToggleButton = new javax.swing.JToggleButton();
        profileButton = new javax.swing.JToggleButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        checkoutToggleButton = new javax.swing.JToggleButton();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        navigationPanel = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        homeButton = new javax.swing.JToggleButton();
        receipeButton = new javax.swing.JToggleButton();
        meatFishButton = new javax.swing.JToggleButton();
        freezerButton = new javax.swing.JToggleButton();
        dairyButton = new javax.swing.JToggleButton();
        fruitVegetablesButton = new javax.swing.JToggleButton();
        pantryButton = new javax.swing.JToggleButton();
        candySnacksButton = new javax.swing.JToggleButton();
        nextButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        cardCartListLayeredPane = new javax.swing.JLayeredPane();
        cartLayeredPanel = new javax.swing.JPanel();
        cardPanel = new javax.swing.JPanel();
        listLayeredPanel = new javax.swing.JPanel();
        listLayeredPanelTitle = new javax.swing.JLabel();
        cartAndListsPanel = new javax.swing.JPanel();
        cartPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cartToggleButton = new javax.swing.JToggleButton();
        cartAmountLabel = new javax.swing.JLabel();
        cartPriceLabel = new javax.swing.JLabel();
        listsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        listToggleButton = new javax.swing.JToggleButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 100), new java.awt.Dimension(0, 100), new java.awt.Dimension(2147483647, 2147483647));
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        undo = new javax.swing.JMenuItem();
        redo = new javax.swing.JMenuItem();
        navigate = new javax.swing.JMenu();
        homeMenuNavigation = new javax.swing.JMenuItem();
        hintsMenuNavigation = new javax.swing.JMenuItem();
        myFavouritesMenuNavigation = new javax.swing.JMenuItem();
        myProfileMenuNavigation = new javax.swing.JMenuItem();
        toCheckoutMenuNavigation = new javax.swing.JMenuItem();
        goToPreviousCategory = new javax.swing.JMenuItem();
        goToNextCategory = new javax.swing.JMenuItem();
        switchToPrevious = new javax.swing.JMenuItem();
        switchToNext = new javax.swing.JMenuItem();
        view = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        zoomIn = new javax.swing.JMenuItem();
        zoomOut = new javax.swing.JMenuItem();
        fullscreen = new javax.swing.JCheckBoxMenuItem();
        minimize = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        contact = new javax.swing.JMenuItem();
        aboutIMat = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jPopupMenu1.add(jMenuItem2);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iMat");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1260, 800));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(40, 40, 40, 40));
        headerPanel.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        headerPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        headerPanel.setPreferredSize(new java.awt.Dimension(0, 140));
        headerPanel.setLayout(new javax.swing.BoxLayout(headerPanel, javax.swing.BoxLayout.LINE_AXIS));

        logotype.setFont(new java.awt.Font("Helvetica", 1, 48)); // NOI18N
        logotype.setText("iMat");
        logotype.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logotype.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logotypeMouseClicked(evt);
            }
        });
        headerPanel.add(logotype);
        headerPanel.add(filler2);

        searchTextField.setFont(new java.awt.Font("Helvetica", 0, 18)); // NOI18N
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchTextField.setText("SÃ¶k produkt...");
        searchTextField.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 0, new java.awt.Color(200, 200, 200)), javax.swing.BorderFactory.createEmptyBorder(0, 12, 0, 0)));
        searchTextField.setMaximumSize(new java.awt.Dimension(2147483647, 60));
        searchTextField.setMinimumSize(new java.awt.Dimension(0, 0));
        searchTextField.setPreferredSize(new java.awt.Dimension(124, 60));
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });
        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyPressed(evt);
            }
        });
        headerPanel.add(searchTextField);

        searchButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        searchButton.setText("SÃK");
        searchButton.setToolTipText("SÃ¶k i butiken");
        searchButton.setAlignmentX(0.5F);
        searchButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(200, 200, 200)));
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchButton.setFocusPainted(false);
        searchButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchButton.setIconTextGap(0);
        searchButton.setMargin(null);
        searchButton.setMaximumSize(new java.awt.Dimension(75, 60));
        searchButton.setMinimumSize(new java.awt.Dimension(75, 40));
        searchButton.setPreferredSize(new java.awt.Dimension(75, 40));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        headerPanel.add(searchButton);
        headerPanel.add(filler3);

        hintsToggleButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(hintsToggleButton);
        hintsToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/info.png"))); // NOI18N
        hintsToggleButton.setToolTipText("Tips");
        hintsToggleButton.setBorderPainted(false);
        hintsToggleButton.setContentAreaFilled(false);
        hintsToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        hintsToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintsToggleButtonActionPerformed(evt);
            }
        });
        headerPanel.add(hintsToggleButton);

        favoritesToggleButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(favoritesToggleButton);
        favoritesToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/heart-black.png"))); // NOI18N
        favoritesToggleButton.setToolTipText("Favoriter");
        favoritesToggleButton.setBorderPainted(false);
        favoritesToggleButton.setContentAreaFilled(false);
        favoritesToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        favoritesToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoritesToggleButtonActionPerformed(evt);
            }
        });
        headerPanel.add(favoritesToggleButton);

        profileButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(profileButton);
        profileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/person.png"))); // NOI18N
        profileButton.setToolTipText("Min profil");
        profileButton.setBorderPainted(false);
        profileButton.setContentAreaFilled(false);
        profileButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });
        headerPanel.add(profileButton);
        headerPanel.add(filler4);

        globalNavigationButtonGroup.add(checkoutToggleButton);
        checkoutToggleButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        checkoutToggleButton.setForeground(new java.awt.Color(255, 255, 255));
        checkoutToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-green.png"))); // NOI18N
        checkoutToggleButton.setText("TILL KASSAN");
        checkoutToggleButton.setBorder(null);
        checkoutToggleButton.setBorderPainted(false);
        checkoutToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        checkoutToggleButton.setMargin(null);
        checkoutToggleButton.setMaximumSize(new java.awt.Dimension(130, 60));
        checkoutToggleButton.setMinimumSize(new java.awt.Dimension(130, 60));
        checkoutToggleButton.setPreferredSize(new java.awt.Dimension(130, 60));
        checkoutToggleButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-green-selected.png"))); // NOI18N
        checkoutToggleButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-green-hover.png"))); // NOI18N
        checkoutToggleButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-green-hover.png"))); // NOI18N
        checkoutToggleButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-green.png"))); // NOI18N
        checkoutToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutToggleButtonActionPerformed(evt);
            }
        });
        headerPanel.add(checkoutToggleButton);
        headerPanel.add(filler5);

        getContentPane().add(headerPanel);

        navigationPanel.setBackground(new java.awt.Color(255, 255, 255));
        navigationPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(200, 200, 200)));
        navigationPanel.setMaximumSize(new java.awt.Dimension(2147483647, 80));
        navigationPanel.setLayout(new javax.swing.BoxLayout(navigationPanel, javax.swing.BoxLayout.X_AXIS));

        previousButton.setBackground(new java.awt.Color(255, 255, 255));
        previousButton.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        previousButton.setText("â");
        previousButton.setToolTipText("Visa tidigare sida");
        previousButton.setBorder(null);
        previousButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        previousButton.setFocusPainted(false);
        previousButton.setIconTextGap(0);
        previousButton.setMargin(null);
        previousButton.setMaximumSize(new java.awt.Dimension(60, 60));
        previousButton.setMinimumSize(new java.awt.Dimension(60, 60));
        previousButton.setPreferredSize(new java.awt.Dimension(60, 60));
        previousButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        previousButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        previousButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        previousButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(previousButton);

        homeButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(homeButton);
        homeButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        homeButton.setText("HEM");
        homeButton.setToolTipText("Visa fÃ¶rstasidan");
        homeButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        homeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        homeButton.setFocusPainted(false);
        homeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        homeButton.setIconTextGap(0);
        homeButton.setMargin(null);
        homeButton.setMaximumSize(new java.awt.Dimension(80, 60));
        homeButton.setMinimumSize(new java.awt.Dimension(0, 0));
        homeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        homeButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        homeButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        homeButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(homeButton);

        receipeButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(receipeButton);
        receipeButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        receipeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        receipeButton.setText("RECEPT");
        receipeButton.setToolTipText("Visa rekommenderade recept");
        receipeButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        receipeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        receipeButton.setFocusPainted(false);
        receipeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        receipeButton.setIconTextGap(0);
        receipeButton.setMargin(null);
        receipeButton.setMaximumSize(new java.awt.Dimension(100, 60));
        receipeButton.setMinimumSize(new java.awt.Dimension(0, 0));
        receipeButton.setOpaque(true);
        receipeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        receipeButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        receipeButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        receipeButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        receipeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        receipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipeButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(receipeButton);

        meatFishButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(meatFishButton);
        meatFishButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        meatFishButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        meatFishButton.setText("KÃTT & FISK");
        meatFishButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        meatFishButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        meatFishButton.setFocusPainted(false);
        meatFishButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        meatFishButton.setIconTextGap(0);
        meatFishButton.setMargin(null);
        meatFishButton.setMaximumSize(new java.awt.Dimension(130, 60));
        meatFishButton.setMinimumSize(new java.awt.Dimension(0, 0));
        meatFishButton.setOpaque(true);
        meatFishButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        meatFishButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        meatFishButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        meatFishButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        meatFishButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        meatFishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meatFishButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(meatFishButton);

        freezerButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(freezerButton);
        freezerButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        freezerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        freezerButton.setText("FRYSVAROR");
        freezerButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        freezerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        freezerButton.setFocusPainted(false);
        freezerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        freezerButton.setIconTextGap(0);
        freezerButton.setMargin(null);
        freezerButton.setMaximumSize(new java.awt.Dimension(130, 60));
        freezerButton.setMinimumSize(new java.awt.Dimension(0, 0));
        freezerButton.setOpaque(true);
        freezerButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        freezerButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        freezerButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        freezerButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        freezerButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        freezerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freezerButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(freezerButton);

        dairyButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(dairyButton);
        dairyButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        dairyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        dairyButton.setText("MEJERI");
        dairyButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        dairyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dairyButton.setFocusPainted(false);
        dairyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dairyButton.setIconTextGap(0);
        dairyButton.setMargin(null);
        dairyButton.setMaximumSize(new java.awt.Dimension(100, 60));
        dairyButton.setMinimumSize(new java.awt.Dimension(0, 0));
        dairyButton.setOpaque(true);
        dairyButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        dairyButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        dairyButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        dairyButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        dairyButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        dairyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dairyButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(dairyButton);

        fruitVegetablesButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(fruitVegetablesButton);
        fruitVegetablesButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        fruitVegetablesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        fruitVegetablesButton.setText("FRUKT & GRÃNT");
        fruitVegetablesButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        fruitVegetablesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fruitVegetablesButton.setFocusPainted(false);
        fruitVegetablesButton.setHideActionText(true);
        fruitVegetablesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fruitVegetablesButton.setIconTextGap(0);
        fruitVegetablesButton.setMargin(null);
        fruitVegetablesButton.setMaximumSize(new java.awt.Dimension(150, 60));
        fruitVegetablesButton.setMinimumSize(new java.awt.Dimension(0, 0));
        fruitVegetablesButton.setOpaque(true);
        fruitVegetablesButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        fruitVegetablesButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        fruitVegetablesButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        fruitVegetablesButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        fruitVegetablesButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        fruitVegetablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fruitVegetablesButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(fruitVegetablesButton);

        pantryButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(pantryButton);
        pantryButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        pantryButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        pantryButton.setText("SKAFFERI");
        pantryButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        pantryButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pantryButton.setFocusPainted(false);
        pantryButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pantryButton.setIconTextGap(0);
        pantryButton.setMargin(null);
        pantryButton.setMaximumSize(new java.awt.Dimension(110, 60));
        pantryButton.setMinimumSize(new java.awt.Dimension(0, 0));
        pantryButton.setOpaque(true);
        pantryButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        pantryButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        pantryButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        pantryButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        pantryButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        pantryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pantryButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(pantryButton);

        candySnacksButton.setBackground(new java.awt.Color(255, 255, 255));
        globalNavigationButtonGroup.add(candySnacksButton);
        candySnacksButton.setFont(new java.awt.Font("Helvetica", 1, 14)); // NOI18N
        candySnacksButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button.png"))); // NOI18N
        candySnacksButton.setText("GODIS & SNACKS");
        candySnacksButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        candySnacksButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        candySnacksButton.setFocusPainted(false);
        candySnacksButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        candySnacksButton.setIconTextGap(0);
        candySnacksButton.setMargin(null);
        candySnacksButton.setMaximumSize(new java.awt.Dimension(160, 60));
        candySnacksButton.setMinimumSize(new java.awt.Dimension(0, 0));
        candySnacksButton.setOpaque(true);
        candySnacksButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        candySnacksButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        candySnacksButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected-hover.png"))); // NOI18N
        candySnacksButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        candySnacksButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                globalToggleFocusLost(evt);
            }
        });
        candySnacksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candySnacksButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(candySnacksButton);

        nextButton.setBackground(new java.awt.Color(255, 255, 255));
        nextButton.setFont(new java.awt.Font("Helvetica", 1, 24)); // NOI18N
        nextButton.setText("â");
        nextButton.setToolTipText("Visa nÃ¤sta sida");
        nextButton.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        nextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nextButton.setFocusPainted(false);
        nextButton.setMargin(null);
        nextButton.setMaximumSize(new java.awt.Dimension(60, 60));
        nextButton.setMinimumSize(new java.awt.Dimension(60, 60));
        nextButton.setPreferredSize(new java.awt.Dimension(60, 60));
        nextButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        nextButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        nextButton.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-hover.png"))); // NOI18N
        nextButton.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/button-selected.png"))); // NOI18N
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(nextButton);

        getContentPane().add(navigationPanel);

        contentPanel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        contentPanel.setPreferredSize(new java.awt.Dimension(80, 0));
        contentPanel.setLayout(new java.awt.BorderLayout());

        cartLayeredPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartLayeredPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        cartLayeredPanel.setLayout(new java.awt.BorderLayout());

        cardPanel.setVerifyInputWhenFocusTarget(false);
        cardPanel.setLayout(new java.awt.CardLayout());

        listLayeredPanelTitle.setText("Mina listor");
        listLayeredPanel.add(listLayeredPanelTitle);

        javax.swing.GroupLayout cardCartListLayeredPaneLayout = new javax.swing.GroupLayout(cardCartListLayeredPane);
        cardCartListLayeredPane.setLayout(cardCartListLayeredPaneLayout);
        cardCartListLayeredPaneLayout.setHorizontalGroup(
            cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1613, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardCartListLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cartLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardCartListLayeredPaneLayout.createSequentialGroup()
                    .addContainerGap(1474, Short.MAX_VALUE)
                    .addComponent(listLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)))
        );
        cardCartListLayeredPaneLayout.setVerticalGroup(
            cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cartLayeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
            .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(cardCartListLayeredPaneLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(listLayeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        cardCartListLayeredPane.setLayer(cartLayeredPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cardCartListLayeredPane.setLayer(cardPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cardCartListLayeredPane.setLayer(listLayeredPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        contentPanel.add(cardCartListLayeredPane, java.awt.BorderLayout.CENTER);

        cartAndListsPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartAndListsPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(200, 200, 200)));
        cartAndListsPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        cartAndListsPanel.setMinimumSize(new java.awt.Dimension(70, 0));
        cartAndListsPanel.setPreferredSize(new java.awt.Dimension(80, 0));
        cartAndListsPanel.setLayout(new javax.swing.BoxLayout(cartAndListsPanel, javax.swing.BoxLayout.Y_AXIS));

        cartPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        cartPanel.setMinimumSize(new java.awt.Dimension(0, 200));
        cartPanel.setLayout(new javax.swing.BoxLayout(cartPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Varukorg");
        jLabel4.setMaximumSize(new java.awt.Dimension(80, 20));
        jLabel4.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel4.setPreferredSize(null);
        cartPanel.add(jLabel4);

        cartToggleButton.setBackground(new java.awt.Color(255, 255, 255));
        closeablePanelsButtonGroup.add(cartToggleButton);
        cartToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/basket.png"))); // NOI18N
        cartToggleButton.setToolTipText("Visa varukorg");
        cartToggleButton.setBorderPainted(false);
        cartToggleButton.setContentAreaFilled(false);
        cartToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cartToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartToggleButtonActionPerformed(evt);
            }
        });
        cartPanel.add(cartToggleButton);

        cartAmountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartAmountLabel.setText("Varor: 0");
        cartAmountLabel.setMaximumSize(new java.awt.Dimension(80, 20));
        cartAmountLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        cartPanel.add(cartAmountLabel);

        cartPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartPriceLabel.setText(" 0 kr");
        cartPriceLabel.setMaximumSize(new java.awt.Dimension(80, 20));
        cartPriceLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        cartPanel.add(cartPriceLabel);

        cartAndListsPanel.add(cartPanel);

        listsPanel.setBackground(new java.awt.Color(255, 255, 255));
        listsPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        listsPanel.setPreferredSize(new java.awt.Dimension(80, 389));
        listsPanel.setLayout(new javax.swing.BoxLayout(listsPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Listor");
        jLabel5.setMaximumSize(new java.awt.Dimension(80, 20));
        jLabel5.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel5.setPreferredSize(null);
        listsPanel.add(jLabel5);

        listToggleButton.setBackground(new java.awt.Color(255, 255, 255));
        closeablePanelsButtonGroup.add(listToggleButton);
        listToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/lists.png"))); // NOI18N
        listToggleButton.setToolTipText("Visa mina listor");
        listToggleButton.setBorderPainted(false);
        listToggleButton.setContentAreaFilled(false);
        listToggleButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        listToggleButton.setMaximumSize(new java.awt.Dimension(80, 80));
        listToggleButton.setMinimumSize(new java.awt.Dimension(80, 80));
        listToggleButton.setPreferredSize(new java.awt.Dimension(80, 80));
        listToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listToggleButtonActionPerformed(evt);
            }
        });
        listsPanel.add(listToggleButton);

        cartAndListsPanel.add(listsPanel);

        filler1.setBackground(new java.awt.Color(255, 255, 255));
        cartAndListsPanel.add(filler1);

        contentPanel.add(cartAndListsPanel, java.awt.BorderLayout.EAST);

        getContentPane().add(contentPanel);

        file.setMnemonic('a');
        file.setText("Arkiv");

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exit.setMnemonic('a');
        exit.setText("Avsluta");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        menu.add(file);

        edit.setMnemonic('e');
        edit.setText("Redigera");

        undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undo.setMnemonic('\u00e5');
        undo.setText("Ãngra");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });
        edit.add(undo);

        redo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redo.setMnemonic('g');
        redo.setText("GÃ¶r om");
        redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoActionPerformed(evt);
            }
        });
        edit.add(redo);

        menu.add(edit);

        navigate.setMnemonic('n');
        navigate.setText("Navigera");

        homeMenuNavigation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, 0));
        homeMenuNavigation.setText("Hem");
        homeMenuNavigation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuNavigationActionPerformed(evt);
            }
        });
        navigate.add(homeMenuNavigation);

        hintsMenuNavigation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, 0));
        hintsMenuNavigation.setText("Tips");
        hintsMenuNavigation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintsMenuNavigationActionPerformed(evt);
            }
        });
        navigate.add(hintsMenuNavigation);

        myFavouritesMenuNavigation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, 0));
        myFavouritesMenuNavigation.setText("Mina favoriter");
        myFavouritesMenuNavigation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myFavouritesMenuNavigationActionPerformed(evt);
            }
        });
        navigate.add(myFavouritesMenuNavigation);

        myProfileMenuNavigation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, 0));
        myProfileMenuNavigation.setText("Min profil");
        myProfileMenuNavigation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProfileMenuNavigationActionPerformed(evt);
            }
        });
        navigate.add(myProfileMenuNavigation);

        toCheckoutMenuNavigation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, 0));
        toCheckoutMenuNavigation.setText("Till kassan");
        toCheckoutMenuNavigation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toCheckoutMenuNavigationActionPerformed(evt);
            }
        });
        navigate.add(toCheckoutMenuNavigation);

        goToPreviousCategory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, 0));
        goToPreviousCategory.setText("GÃ¥ till fÃ¶regÃ¥ende kategori");
        goToPreviousCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToPreviousCategoryActionPerformed(evt);
            }
        });
        navigate.add(goToPreviousCategory);

        goToNextCategory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_RIGHT, 0));
        goToNextCategory.setText("GÃ¥ till nÃ¤sta kategori");
        goToNextCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToNextCategoryActionPerformed(evt);
            }
        });
        navigate.add(goToNextCategory);

        switchToPrevious.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, 0));
        switchToPrevious.setMnemonic('f');
        switchToPrevious.setText("Visa tidigare sida");
        switchToPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToPreviousActionPerformed(evt);
            }
        });
        navigate.add(switchToPrevious);

        switchToNext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, java.awt.event.InputEvent.SHIFT_MASK));
        switchToNext.setMnemonic('n');
        switchToNext.setText("Visa senare sida");
        switchToNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToNextActionPerformed(evt);
            }
        });
        navigate.add(switchToNext);

        menu.add(navigate);

        view.setMnemonic('v');
        view.setText("Vy");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Visa varukorg");
        view.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Visa mina listor");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        view.add(jMenuItem4);

        zoomIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_MASK));
        zoomIn.setMnemonic('i');
        zoomIn.setText("Zooma in");
        view.add(zoomIn);

        zoomOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        zoomOut.setMnemonic('u');
        zoomOut.setText("Zooma ut");
        view.add(zoomOut);

        fullscreen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
        fullscreen.setMnemonic('f');
        fullscreen.setText("FullskÃ¤rm");
        view.add(fullscreen);

        minimize.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.ALT_MASK));
        minimize.setMnemonic('m');
        minimize.setText("Minimera");
        view.add(minimize);

        menu.add(view);

        about.setMnemonic('o');
        about.setText("Om oss");

        contact.setMnemonic('k');
        contact.setText("Kontakt");
        about.add(contact);

        aboutIMat.setMnemonic('i');
        aboutIMat.setText("iMat");
        about.add(aboutIMat);

        menu.add(about);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ProductCategoryPanel getProductCategoryPanel(){
        return productCategoryPanel;
    }
    
    public DetailPanel getDetailPanel(){
        return detailPanel;
    }
   
    
    public void updateCartLabels(){
        cartAmountLabel.setText(dataHandler.getShoppingCart().getItems().size() + " varor");
        cartPriceLabel.setText(Math.round(dataHandler.getShoppingCart().getTotal()) + " kr");
    }
    
    public void switchCard(String cardName, java.awt.event.ActionEvent evt) {
        CardLayout cards = (CardLayout) cardPanel.getLayout();
        cards.show(cardPanel, cardName);
        if (evt != null) {
            previousCards.add(evt);
            if (previousCards.size() == 2) {
                setPrevious(true);
            }
        }
    }
    
    public void switchToPreviousCard() {
        if (previousCards.size() >  1) {
            nextCards.add(previousCards.getLast());
            if (nextCards.size() == 1) {
                setNext(true);
            }
            previousCards.removeLast();
            ((AbstractButton)previousCards.getLast().getSource()).doClick();
            previousCards.removeLast();
            if (previousCards.size() == 1) {
                setPrevious(false);
            }
        }
    }
    
    public void switchToNextCard() {
        if (nextCards.size() > 0) {
            ((AbstractButton)nextCards.getLast().getSource()).doClick();
            nextCards.removeLast();
            if (nextCards.size() == 0) {
                setNext(false);
            }
        }
    }
    
    public void setPrevious(boolean b) {
        switchToPrevious.setEnabled(b);
    }
    
    public void setNext(boolean b) {
        switchToNext.setEnabled(b);
    }
    
    public void changeFilter(FilterPanel filterCard, java.awt.event.ActionEvent e) {
        this.productCategoryPanel.applyFilters(filterCard);
        for(Component button : navigationPanel.getComponents()) {
            if(button instanceof JToggleButton) {
                ((JToggleButton)button).setForeground(Color.black);
            }
        }
        try {
            ((JToggleButton)e.getSource()).setForeground(Color.white);
        } catch(Exception exc) {}
        switchCard("productCategoryPanel", e);
    }
    
    public void closeClosablePanels() {
        closeCart();
        closeList();
    }
    
    public void closeCart() {
        cartLayeredPanel.setBackground(Color.LIGHT_GRAY);   //Just during development
        if (cartShowing){
            cardCartListLayeredPane.moveToFront(cardPanel);
            cardCartListLayeredPane.moveToBack(cartLayeredPanel);
            cartShowing = false;
        } else {
            cardCartListLayeredPane.moveToBack(cardPanel);
            cardCartListLayeredPane.moveToBack(listLayeredPanel);
            cardCartListLayeredPane.moveToFront(cartLayeredPanel);
            cartShowing = true;
        }
        cartToggleButton.setSelected(cartShowing);
    }
    
    public void closeList() {
        if (listShowing) {
            cardCartListLayeredPane.moveToFront(cardPanel);
            cardCartListLayeredPane.moveToBack(listLayeredPanel);
            listShowing = false;
        } else {
            cardCartListLayeredPane.moveToBack(cardPanel);
            cardCartListLayeredPane.moveToBack(cartLayeredPanel);
            cardCartListLayeredPane.moveToFront(listLayeredPanel);
            listShowing = true;
        }
        listToggleButton.setSelected(listShowing);
    }
    
    public JLayeredPane getLayeredPane() {
        return this.cardCartListLayeredPane;
    }
    
    public JPanel getCardPanel() {
        return this.cardPanel;
    }
    
    public JPanel getCartPanel() {
        return this.cartPanel;
    }
    
    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        if(searchTextField.getText().equals("SÃ¶k produkt...")){
            searchTextField.setText("");
        }else{
            searchTextField.selectAll();
        }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if(searchTextField.getText().equals("")){
            searchTextField.setText("SÃ¶k produkt...");
        }
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        this.productCategoryPanel.displayProducts(dataHandler.findProducts(searchTextField.getText()));
        switchCard("productCategoryPanel", evt);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        switchCard("welcomePanel", evt);
        currentCategoryIndex = 0;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void receipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receipeButtonActionPerformed
        switchCard("recipePanel", evt);
        currentCategoryIndex = 1;
    }//GEN-LAST:event_receipeButtonActionPerformed

    private void meatFishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meatFishButtonActionPerformed
        changeFilter(FilterFactory.meatAndFishFilterCard, evt);
        currentCategoryIndex = 2;
    }//GEN-LAST:event_meatFishButtonActionPerformed

    private void freezerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freezerButtonActionPerformed
        changeFilter(FilterFactory.freezerFilterCard, evt);
        currentCategoryIndex = 3;
    }//GEN-LAST:event_freezerButtonActionPerformed

    private void dairyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dairyButtonActionPerformed
        changeFilter(FilterFactory.dairyFilterCard, evt);
        currentCategoryIndex = 4;
    }//GEN-LAST:event_dairyButtonActionPerformed

    private void fruitVegetablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fruitVegetablesButtonActionPerformed
        changeFilter(FilterFactory.veggieAndFruitsFilterCard, evt);
        currentCategoryIndex = 5;
    }//GEN-LAST:event_fruitVegetablesButtonActionPerformed

    private void pantryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pantryButtonActionPerformed
        changeFilter(FilterFactory.pantryFilterCard, evt);
        currentCategoryIndex = 6;
    }//GEN-LAST:event_pantryButtonActionPerformed

    private void candySnacksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candySnacksButtonActionPerformed
        changeFilter(FilterFactory.sweetsFilterCard, evt);
        currentCategoryIndex = 7;
    }//GEN-LAST:event_candySnacksButtonActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void switchToPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToPreviousActionPerformed
        switchToPreviousCard();
    }//GEN-LAST:event_switchToPreviousActionPerformed

    private void switchToNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToNextActionPerformed
        switchToNextCard();
    }//GEN-LAST:event_switchToNextActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        switch(currentCategoryIndex) {
            case 6:  candySnacksButton.doClick();
                break;
            case 7: homeButton.doClick();
                break;
            case 0: receipeButton.doClick();
                break;
            case 1: meatFishButton.doClick();
                break;
            case 2: freezerButton.doClick();
                break;
            case 3: dairyButton.doClick();
                break;
            case 4: fruitVegetablesButton.doClick();
                break;
            case 5: pantryButton.doClick();
                break;
                
            default: break;
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        switch(currentCategoryIndex) {
            case 0: candySnacksButton.doClick();
                break;
            case 1: homeButton.doClick();
                break;
            case 2: receipeButton.doClick();
                break;
            case 3: meatFishButton.doClick();
                break;
            case 4: freezerButton.doClick();
                break;
            case 5: dairyButton.doClick();
                break;
            case 6: fruitVegetablesButton.doClick();
                break;
            case 7: pantryButton.doClick();
                break;
                
            default: break;   
        }
    }//GEN-LAST:event_previousButtonActionPerformed

    private void cartToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartToggleButtonActionPerformed
        closeCart();
    }//GEN-LAST:event_cartToggleButtonActionPerformed

    private void listToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listToggleButtonActionPerformed
        closeList();
    }//GEN-LAST:event_listToggleButtonActionPerformed

    private void hintsToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintsToggleButtonActionPerformed
        switchCard("hintsPanel", evt);// TODO add your handling code here:
    }//GEN-LAST:event_hintsToggleButtonActionPerformed

    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
        switchCard("profilePanel", evt);
    }//GEN-LAST:event_profileButtonActionPerformed

    private void searchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            this.productCategoryPanel.displayProducts(dataHandler.findProducts(searchTextField.getText()));
            switchCard("productCategoryPanel", null);
        }
    }//GEN-LAST:event_searchTextFieldKeyPressed

    private void logotypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logotypeMouseClicked
        switchCard("welcomePanel", null);
        homeButton.setSelected(true);
    }//GEN-LAST:event_logotypeMouseClicked

    private void globalToggleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_globalToggleFocusLost
        ((JToggleButton)evt.getComponent()).setForeground(Color.black);
    }//GEN-LAST:event_globalToggleFocusLost

    private void favoritesToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoritesToggleButtonActionPerformed
        this.productCategoryPanel.displayProducts(dataHandler.favorites());
        switchCard("productCategoryPanel", evt);
    }//GEN-LAST:event_favoritesToggleButtonActionPerformed

    private void checkoutToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutToggleButtonActionPerformed
        switchCard("checkoutPanel", evt);
    }//GEN-LAST:event_checkoutToggleButtonActionPerformed

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
        if (lastAdded.size() > 0) {
            System.out.println(lastAdded.getLast().toString());
            lastRemoved.add(lastAdded.getLast());
            if (lastRemoved.size() == 1) {
                redo.setEnabled(true);
            } 
            dataHandler.getShoppingCart().removeItem(lastAdded.getLast());
            lastAdded.removeLast();
            lastAdded.removeLast();
            if (lastAdded.size() == 0) {
                undo.setEnabled(false);
            }
            System.out.println(lastAdded.getLast().toString());
        }
    }//GEN-LAST:event_undoActionPerformed

    private void redoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoActionPerformed
        if (lastRemoved.size() > 0) {
            dataHandler.getShoppingCart().addItem(lastRemoved.getLast());
            lastRemoved.removeLast();
            if(lastRemoved.size() == 0) {
                redo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_redoActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void hintsMenuNavigationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintsMenuNavigationActionPerformed
        hintsToggleButton.doClick();
    }//GEN-LAST:event_hintsMenuNavigationActionPerformed

    private void myFavouritesMenuNavigationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myFavouritesMenuNavigationActionPerformed
        favoritesToggleButton.doClick();
    }//GEN-LAST:event_myFavouritesMenuNavigationActionPerformed

    private void homeMenuNavigationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuNavigationActionPerformed
        homeButton.doClick();
    }//GEN-LAST:event_homeMenuNavigationActionPerformed

    private void myProfileMenuNavigationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProfileMenuNavigationActionPerformed
        profileButton.doClick();
    }//GEN-LAST:event_myProfileMenuNavigationActionPerformed

    private void toCheckoutMenuNavigationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toCheckoutMenuNavigationActionPerformed
        checkoutToggleButton.doClick();
    }//GEN-LAST:event_toCheckoutMenuNavigationActionPerformed

    private void goToPreviousCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToPreviousCategoryActionPerformed
        previousButton.doClick();
    }//GEN-LAST:event_goToPreviousCategoryActionPerformed

    private void goToNextCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToNextCategoryActionPerformed
        nextButton.doClick();
    }//GEN-LAST:event_goToNextCategoryActionPerformed

    @Override
    public void shoppingCartChanged(CartEvent ce) {
        lastAdded.add(ce.getShoppingItem());
        undo.setEnabled(true);
        updateCartLabels();
                    
        if(ce.isAddEvent()){
            Color typGreen = new Color(135,211,124);
            cartPanel.setBackground(typGreen);
            cartPanel.repaint();
            cartPanel.revalidate();

            Timer t = new Timer();
            t.schedule(new TimerTask() {
                public void run(){
                    cartPanel.setBackground(Color.white);
                    cartPanel.repaint();
                    cartPanel.revalidate();
                }
            },1500);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        UIManager.getLookAndFeelDefaults()
        .put("defaultFont", new Font("Helvetica", Font.PLAIN, 13));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IMat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JMenuItem aboutIMat;
    private javax.swing.JToggleButton candySnacksButton;
    private javax.swing.JLayeredPane cardCartListLayeredPane;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel cartAmountLabel;
    private javax.swing.JPanel cartAndListsPanel;
    private javax.swing.JPanel cartLayeredPanel;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JLabel cartPriceLabel;
    private javax.swing.JToggleButton cartToggleButton;
    private javax.swing.JToggleButton checkoutToggleButton;
    private javax.swing.ButtonGroup closeablePanelsButtonGroup;
    private javax.swing.JMenuItem contact;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JToggleButton dairyButton;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JToggleButton favoritesToggleButton;
    private javax.swing.JMenu file;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.JToggleButton freezerButton;
    private javax.swing.JToggleButton fruitVegetablesButton;
    private javax.swing.JCheckBoxMenuItem fullscreen;
    private javax.swing.ButtonGroup globalNavigationButtonGroup;
    private javax.swing.JMenuItem goToNextCategory;
    private javax.swing.JMenuItem goToPreviousCategory;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JMenuItem hintsMenuNavigation;
    private javax.swing.JToggleButton hintsToggleButton;
    private javax.swing.JToggleButton homeButton;
    private javax.swing.JMenuItem homeMenuNavigation;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPanel listLayeredPanel;
    private javax.swing.JLabel listLayeredPanelTitle;
    private javax.swing.JToggleButton listToggleButton;
    private javax.swing.JPanel listsPanel;
    private javax.swing.JLabel logotype;
    private javax.swing.JToggleButton meatFishButton;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem minimize;
    private javax.swing.JMenuItem myFavouritesMenuNavigation;
    private javax.swing.JMenuItem myProfileMenuNavigation;
    private javax.swing.JMenu navigate;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JToggleButton pantryButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JToggleButton profileButton;
    private javax.swing.JToggleButton receipeButton;
    private javax.swing.JMenuItem redo;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JMenuItem switchToNext;
    private javax.swing.JMenuItem switchToPrevious;
    private javax.swing.JMenuItem toCheckoutMenuNavigation;
    private javax.swing.JMenuItem undo;
    private javax.swing.JMenu view;
    private javax.swing.JMenuItem zoomIn;
    private javax.swing.JMenuItem zoomOut;
    // End of variables declaration//GEN-END:variables

}
