package imat;

import com.sun.org.apache.xalan.internal.xsltc.runtime.BasisLibrary;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JToggleButton;
import javax.swing.UIManager;
import se.chalmers.ait.dat215.project.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author filip
 */
public class IMat extends javax.swing.JFrame implements ShoppingCartListener {
    
    public static IMatDataHandler dataHandler = IMatDataHandler.getInstance();
    
    private ProductCategoryPanel productCategoryPanel;
    private DetailPanel detailPanel;
    private boolean cartShowing = true;
    private boolean listShowing = true;
    private LinkedList<ActionEvent> previousCards =  new LinkedList<>();
    private LinkedList<ActionEvent> nextCards =  new LinkedList<>();
    
    /**
     * Creates new form IMat
     */
    public IMat() {
        initComponents();        
        
        //Saves data when application is terminated
        Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {
            public void run() {
                    dataHandler.shutDown();
            }
        }));
        
        dataHandler.getShoppingCart().addShoppingCartListener(this);
        updateCartLabels();
        homeButton.requestFocus();

      
        /*
        Map<String, ProductCategoryPanel> productCategoryPanels = new TreeMap<String, ProductCategoryPanel>();
        
        productCategoryPanels.put("meatFishPanel", new ProductCategoryPanel(ProductCategory.MEAT, ProductCategory.FISH));
        productCategoryPanels.put("freezerPanel", new ProductCategoryPanel(ProductCategory.POD));
        productCategoryPanels.put("dairyPanel", new ProductCategoryPanel(ProductCategory.DAIRIES));
        productCategoryPanels.put("fruitVegetablesPanel", new ProductCategoryPanel(ProductCategory.BERRY, ProductCategory.CABBAGE, ProductCategory.CITRUS_FRUIT));
        productCategoryPanels.put("pantryPanel", new ProductCategoryPanel(ProductCategory.PASTA, ProductCategory.FLOUR_SUGAR_SALT));
        productCategoryPanels.put("candySnacksPanel", new ProductCategoryPanel(ProductCategory.SWEET));
       
        for(Map.Entry<String, ProductCategoryPanel> entry : productCategoryPanels.entrySet()) {
            this.cardPanel.add(entry.getValue(), entry.getKey());
        }
        */
        
        this.productCategoryPanel = new ProductCategoryPanel();
        this.detailPanel = new DetailPanel();

        
        FilterFactory.createFilterCards();
                
        this.cardPanel.add(this.productCategoryPanel, "productCategoryPanel");
        this.cardPanel.add(new ProfilePanel(), "profilePanel");
        this.cardPanel.add(new HintsPanel(), "hintsPanel");
        this.cardPanel.add(new RecipePanel(), "recipePanel");
        this.cardPanel.add(new WelcomePanel(), "welcomePanel");
        this.cardPanel.add(new CheckoutPanel(), "checkoutPanel");
        this.cardPanel.add(detailPanel, "detailPanel");
        
        closeClosablePanels();
        
        homeButton.doClick();
        setPrevious(false);
        setNext(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        globalNavigationButtonGroup = new javax.swing.ButtonGroup();
        headerPanel = new javax.swing.JPanel();
        logotype = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        tipsButton = new javax.swing.JButton();
        profileButton = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));
        checkoutButton = new javax.swing.JButton();
        navigationPanel = new javax.swing.JPanel();
        previousButton = new javax.swing.JButton();
        homeButton = new javax.swing.JToggleButton();
        receipeButton = new javax.swing.JToggleButton();
        meatFishButton = new javax.swing.JToggleButton();
        freezerButton = new javax.swing.JToggleButton();
        dairyButton = new javax.swing.JToggleButton();
        fruitVegetablesButton = new javax.swing.JToggleButton();
        pantryButton = new javax.swing.JToggleButton();
        candySnacksButton = new javax.swing.JToggleButton();
        favoriteButton = new javax.swing.JToggleButton();
        nextButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        cardCartListLayeredPane = new javax.swing.JLayeredPane();
        cardPanel = new javax.swing.JPanel();
        cartLayeredPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        listLayeredPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cartAndListsPanel = new javax.swing.JPanel();
        cartPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cartButton = new javax.swing.JButton();
        cartAmountLabel = new javax.swing.JLabel();
        cartPriceLabel = new javax.swing.JLabel();
        listsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 100), new java.awt.Dimension(0, 100), new java.awt.Dimension(2147483647, 2147483647));
        menu = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        undo = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        navigate = new javax.swing.JMenu();
        switchToPrevious = new javax.swing.JMenuItem();
        switchToNext = new javax.swing.JMenuItem();
        view = new javax.swing.JMenu();
        zoomIn = new javax.swing.JMenuItem();
        zoomOut = new javax.swing.JMenuItem();
        fullscreen = new javax.swing.JCheckBoxMenuItem();
        minimize = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("jMenuItem2");
        jPopupMenu1.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iMat");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1260, 800));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));
        headerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        headerPanel.setMaximumSize(new java.awt.Dimension(2147483647, 80));
        headerPanel.setMinimumSize(new java.awt.Dimension(0, 0));
        headerPanel.setPreferredSize(new java.awt.Dimension(0, 80));
        headerPanel.setLayout(new javax.swing.BoxLayout(headerPanel, javax.swing.BoxLayout.LINE_AXIS));

        logotype.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        logotype.setText("iMat");
        headerPanel.add(logotype);
        headerPanel.add(filler2);

        searchTextField.setText("Sök produkt...");
        searchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFieldFocusLost(evt);
            }
        });
        headerPanel.add(searchTextField);

        searchButton.setText("Sök");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchButton.setMaximumSize(new java.awt.Dimension(75, 40));
        searchButton.setMinimumSize(new java.awt.Dimension(75, 40));
        searchButton.setPreferredSize(new java.awt.Dimension(75, 40));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        headerPanel.add(searchButton);
        headerPanel.add(filler3);

        tipsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/info.png"))); // NOI18N
        tipsButton.setBorderPainted(false);
        tipsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tipsButton.setMaximumSize(new java.awt.Dimension(64, 40));
        tipsButton.setMinimumSize(new java.awt.Dimension(64, 40));
        tipsButton.setPreferredSize(new java.awt.Dimension(64, 40));
        tipsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipsButtonActionPerformed(evt);
            }
        });
        headerPanel.add(tipsButton);

        profileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/person.png"))); // NOI18N
        profileButton.setBorderPainted(false);
        profileButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        profileButton.setMaximumSize(new java.awt.Dimension(64, 40));
        profileButton.setMinimumSize(new java.awt.Dimension(64, 40));
        profileButton.setPreferredSize(new java.awt.Dimension(64, 40));
        profileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileButtonActionPerformed(evt);
            }
        });
        headerPanel.add(profileButton);
        headerPanel.add(filler4);

        checkoutButton.setBackground(new java.awt.Color(204, 255, 102));
        checkoutButton.setText("Till kassan");
        checkoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkoutButton.setMaximumSize(new java.awt.Dimension(112, 40));
        checkoutButton.setMinimumSize(new java.awt.Dimension(112, 40));
        checkoutButton.setPreferredSize(new java.awt.Dimension(112, 40));
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });
        headerPanel.add(checkoutButton);

        getContentPane().add(headerPanel);

        navigationPanel.setBackground(new java.awt.Color(255, 255, 255));
        navigationPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(200, 200, 200)), javax.swing.BorderFactory.createEmptyBorder(0, 20, 20, 20)));
        navigationPanel.setMaximumSize(new java.awt.Dimension(2147483647, 80));
        navigationPanel.setLayout(new javax.swing.BoxLayout(navigationPanel, javax.swing.BoxLayout.LINE_AXIS));

        previousButton.setText("<<");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(previousButton);

        globalNavigationButtonGroup.add(homeButton);
        homeButton.setText("Hem");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(homeButton);

        globalNavigationButtonGroup.add(receipeButton);
        receipeButton.setText("Recept");
        receipeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receipeButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(receipeButton);

        globalNavigationButtonGroup.add(meatFishButton);
        meatFishButton.setText("Kött & Fisk");
        meatFishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meatFishButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(meatFishButton);

        globalNavigationButtonGroup.add(freezerButton);
        freezerButton.setText("Frysvaror");
        freezerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freezerButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(freezerButton);

        globalNavigationButtonGroup.add(dairyButton);
        dairyButton.setText("Mejeri");
        dairyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dairyButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(dairyButton);

        globalNavigationButtonGroup.add(fruitVegetablesButton);
        fruitVegetablesButton.setText("Frukt & Grönt");
        fruitVegetablesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fruitVegetablesButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(fruitVegetablesButton);

        globalNavigationButtonGroup.add(pantryButton);
        pantryButton.setText("Skafferi");
        pantryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pantryButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(pantryButton);

        globalNavigationButtonGroup.add(candySnacksButton);
        candySnacksButton.setText("Godis & Snacks");
        candySnacksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candySnacksButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(candySnacksButton);

        globalNavigationButtonGroup.add(favoriteButton);
        favoriteButton.setText("Favoriter");
        favoriteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favoriteButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(favoriteButton);

        nextButton.setText(">>");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        navigationPanel.add(nextButton);

        getContentPane().add(navigationPanel);

        contentPanel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        contentPanel.setPreferredSize(new java.awt.Dimension(80, 0));
        contentPanel.setLayout(new java.awt.BorderLayout());

        cardPanel.setLayout(new java.awt.CardLayout());

        jLabel2.setText("ShoppingCart");
        cartLayeredPanel.add(jLabel2);

        jLabel3.setText("Listor");
        listLayeredPanel.add(jLabel3);

        javax.swing.GroupLayout cardCartListLayeredPaneLayout = new javax.swing.GroupLayout(cardCartListLayeredPane);
        cardCartListLayeredPane.setLayout(cardCartListLayeredPaneLayout);
        cardCartListLayeredPaneLayout.setHorizontalGroup(
            cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardCartListLayeredPaneLayout.createSequentialGroup()
                .addGroup(cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardCartListLayeredPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(listLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cartLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        cardCartListLayeredPaneLayout.setVerticalGroup(
            cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardCartListLayeredPaneLayout.createSequentialGroup()
                .addGroup(cardCartListLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listLayeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addComponent(cartLayeredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        cardCartListLayeredPane.setLayer(cardPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cardCartListLayeredPane.setLayer(cartLayeredPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        cardCartListLayeredPane.setLayer(listLayeredPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        contentPanel.add(cardCartListLayeredPane, java.awt.BorderLayout.CENTER);

        cartAndListsPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartAndListsPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        cartAndListsPanel.setMinimumSize(new java.awt.Dimension(70, 0));
        cartAndListsPanel.setPreferredSize(new java.awt.Dimension(80, 0));
        cartAndListsPanel.setLayout(new javax.swing.BoxLayout(cartAndListsPanel, javax.swing.BoxLayout.Y_AXIS));

        cartPanel.setBackground(new java.awt.Color(255, 255, 255));
        cartPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        cartPanel.setMinimumSize(new java.awt.Dimension(0, 200));
        cartPanel.setLayout(new javax.swing.BoxLayout(cartPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Varukorg");
        jLabel4.setMaximumSize(new java.awt.Dimension(80, 20));
        jLabel4.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel4.setPreferredSize(null);
        cartPanel.add(jLabel4);

        cartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/basket.png"))); // NOI18N
        cartButton.setBorderPainted(false);
        cartButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartButtonActionPerformed(evt);
            }
        });
        cartPanel.add(cartButton);

        cartAmountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartAmountLabel.setText("Varor: 0");
        cartAmountLabel.setMaximumSize(new java.awt.Dimension(80, 20));
        cartAmountLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        cartPanel.add(cartAmountLabel);

        cartPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cartPriceLabel.setText(" 0 kr");
        cartPriceLabel.setMaximumSize(new java.awt.Dimension(80, 20));
        cartPriceLabel.setMinimumSize(new java.awt.Dimension(0, 0));
        cartPanel.add(cartPriceLabel);

        cartAndListsPanel.add(cartPanel);

        listsPanel.setBackground(new java.awt.Color(255, 255, 255));
        listsPanel.setMaximumSize(new java.awt.Dimension(80, 2147483647));
        listsPanel.setPreferredSize(new java.awt.Dimension(80, 389));
        listsPanel.setLayout(new javax.swing.BoxLayout(listsPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imat/resources/lists.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(80, 48));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel1.setPreferredSize(null);
        listsPanel.add(jLabel1);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Listor");
        jLabel5.setMaximumSize(new java.awt.Dimension(80, 20));
        jLabel5.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel5.setPreferredSize(null);
        listsPanel.add(jLabel5);

        cartAndListsPanel.add(listsPanel);

        filler1.setBackground(new java.awt.Color(255, 255, 255));
        cartAndListsPanel.add(filler1);

        contentPanel.add(cartAndListsPanel, java.awt.BorderLayout.EAST);

        getContentPane().add(contentPanel);

        file.setMnemonic('a');
        file.setText("Arkiv");

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exit.setMnemonic('a');
        exit.setText("Avsluta");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        menu.add(file);

        edit.setMnemonic('e');
        edit.setText("Redigera");

        undo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undo.setMnemonic('\u00e5');
        undo.setText("Ångra");
        edit.add(undo);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setMnemonic('g');
        jMenuItem5.setText("Gör om");
        edit.add(jMenuItem5);

        menu.add(edit);

        navigate.setMnemonic('n');
        navigate.setText("Navigera");

        switchToPrevious.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, 0));
        switchToPrevious.setText("Föregående kategori");
        switchToPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToPreviousActionPerformed(evt);
            }
        });
        navigate.add(switchToPrevious);

        switchToNext.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, java.awt.event.InputEvent.SHIFT_MASK));
        switchToNext.setText("Nästa kategori");
        switchToNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                switchToNextActionPerformed(evt);
            }
        });
        navigate.add(switchToNext);

        menu.add(navigate);

        view.setMnemonic('v');
        view.setText("Vy");

        zoomIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PLUS, java.awt.event.InputEvent.CTRL_MASK));
        zoomIn.setMnemonic('i');
        zoomIn.setText("Zooma in");
        view.add(zoomIn);

        zoomOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, java.awt.event.InputEvent.CTRL_MASK));
        zoomOut.setMnemonic('u');
        zoomOut.setText("Zooma ut");
        view.add(zoomOut);

        fullscreen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F11, 0));
        fullscreen.setMnemonic('f');
        fullscreen.setText("Fullskärm");
        view.add(fullscreen);

        minimize.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.ALT_MASK));
        minimize.setMnemonic('m');
        minimize.setText("Minimera");
        view.add(minimize);

        menu.add(view);

        about.setMnemonic('o');
        about.setText("Om oss");

        jMenuItem3.setMnemonic('k');
        jMenuItem3.setText("Kontakt");
        about.add(jMenuItem3);

        jMenuItem4.setMnemonic('i');
        jMenuItem4.setText("iMat");
        about.add(jMenuItem4);

        menu.add(about);

        setJMenuBar(menu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public ProductCategoryPanel getProductCategoryPanel(){
        return productCategoryPanel;
    }
    
    public DetailPanel getDetailPanel(){
        return detailPanel;
    }
    
    public void updateCartLabels(){
        cartAmountLabel.setText(dataHandler.getShoppingCart().getItems().size() + " varor");
        cartPriceLabel.setText(Math.round(dataHandler.getShoppingCart().getTotal()) + " kr");
    }
    
    public void switchCard(String cardName, java.awt.event.ActionEvent evt) {
        CardLayout cards = (CardLayout) cardPanel.getLayout();
        cards.show(cardPanel, cardName);
        if (evt != null) {
            previousCards.add(evt);
            if (previousCards.size() == 2) {
                setPrevious(true);
            }
        }
    }
    
    public void switchToPreviousCard() {
        if (previousCards.size() >  1) {
            nextCards.add(previousCards.getLast());
            if (nextCards.size() == 1) {
                setNext(true);
            }
            previousCards.removeLast();
            ((JToggleButton)previousCards.getLast().getSource()).doClick();
            previousCards.removeLast();
            if (previousCards.size() == 1) {
                setPrevious(false);
            }
        }
    }
    
    public void switchToNextCard() {
        if (nextCards.size() > 0) {
            ((JToggleButton)nextCards.getLast().getSource()).doClick();
            nextCards.removeLast();
            if (nextCards.size() == 0) {
                setNext(false);
            }
        }
    }
    
    public void setPrevious(boolean b) {
        switchToPrevious.setEnabled(b);
        previousButton.setEnabled(b);
    }
    
    public void setNext(boolean b) {
        switchToNext.setEnabled(b);
        nextButton.setEnabled(b);
    }
    
    public void changeFilter(FilterPanel filterCard, java.awt.event.ActionEvent e) {
        this.productCategoryPanel.applyFilters(filterCard);
        switchCard("productCategoryPanel", e);
    }
    
    public void closeClosablePanels() {
        closeCart();
        closeList();
    }
    
    public void closeCart() {
        cartLayeredPanel.setBackground(Color.LIGHT_GRAY);   //Just during development
       if (cartShowing){
            cardCartListLayeredPane.moveToFront(cardPanel);
            cardCartListLayeredPane.moveToBack(cartLayeredPanel);
            cartShowing = false;
        } else {
            cardCartListLayeredPane.moveToBack(cardPanel);
            cardCartListLayeredPane.moveToBack(listLayeredPanel);
            cardCartListLayeredPane.moveToFront(cartLayeredPanel);
            cartShowing = true;

        }
    }
    
    public void closeList() {
        if (listShowing) {
            cardCartListLayeredPane.moveToFront(cardPanel);
            cardCartListLayeredPane.moveToBack(listLayeredPanel);
            listShowing = false;
        } else {
            cardCartListLayeredPane.moveToBack(cardPanel);
            cardCartListLayeredPane.moveToBack(cartLayeredPanel);
            cardCartListLayeredPane.moveToFront(listLayeredPanel);
            listShowing = true;
        }
    }
    
    private void profileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileButtonActionPerformed
       switchCard("profilePanel", evt);
    }//GEN-LAST:event_profileButtonActionPerformed

    private void tipsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipsButtonActionPerformed
        switchCard("hintsPanel", evt);
    }//GEN-LAST:event_tipsButtonActionPerformed

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutButtonActionPerformed

        switchCard("checkoutPanel", evt);
    }//GEN-LAST:event_checkoutButtonActionPerformed

    private void searchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusGained
        if(searchTextField.getText().equals("Sök produkt...")){
            searchTextField.setText("");
        }else{
            searchTextField.selectAll();
        }
    }//GEN-LAST:event_searchTextFieldFocusGained

    private void searchTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFieldFocusLost
        if(searchTextField.getText().equals("")){
            searchTextField.setText("Sök produkt...");
        }
    }//GEN-LAST:event_searchTextFieldFocusLost

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed

        this.productCategoryPanel.displayProducts(dataHandler.findProducts(searchTextField.getText()));
        switchCard("productCategoryPanel", evt);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void cartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartButtonActionPerformed
        closeCart();
    }//GEN-LAST:event_cartButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        switchCard("welcomePanel", evt);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void receipeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receipeButtonActionPerformed
        switchCard("recipePanel", evt);
    }//GEN-LAST:event_receipeButtonActionPerformed

    private void meatFishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meatFishButtonActionPerformed
        changeFilter(FilterFactory.meatAndFishFilterCard, evt);
    }//GEN-LAST:event_meatFishButtonActionPerformed

    private void freezerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freezerButtonActionPerformed
        changeFilter(FilterFactory.freezerFilterCard, evt);
    }//GEN-LAST:event_freezerButtonActionPerformed

    private void dairyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dairyButtonActionPerformed
        changeFilter(FilterFactory.dairyFilterCard, evt);
    }//GEN-LAST:event_dairyButtonActionPerformed

    private void fruitVegetablesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fruitVegetablesButtonActionPerformed
        changeFilter(FilterFactory.veggieAndFruitsFilterCard, evt);
    }//GEN-LAST:event_fruitVegetablesButtonActionPerformed

    private void pantryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pantryButtonActionPerformed
        changeFilter(FilterFactory.pantryFilterCard, evt);
    }//GEN-LAST:event_pantryButtonActionPerformed

    private void candySnacksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candySnacksButtonActionPerformed
        changeFilter(FilterFactory.sweetsFilterCard, evt);
    }//GEN-LAST:event_candySnacksButtonActionPerformed

    private void favoriteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favoriteButtonActionPerformed
        this.productCategoryPanel.displayProducts(dataHandler.favorites());
        switchCard("productCategoryPanel", evt);
    }//GEN-LAST:event_favoriteButtonActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void switchToPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToPreviousActionPerformed
        switchToPreviousCard();
    }//GEN-LAST:event_switchToPreviousActionPerformed

    private void switchToNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_switchToNextActionPerformed
        switchToNextCard();
    }//GEN-LAST:event_switchToNextActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        switchToNextCard();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        switchToPreviousCard();
    }//GEN-LAST:event_previousButtonActionPerformed

    @Override
    public void shoppingCartChanged(CartEvent ce) {
        Color typGreen = new Color(135,211,124);
        updateCartLabels();
        cartPanel.setBackground(typGreen);
        cartPanel.repaint();
        cartPanel.revalidate();
        
        Timer t = new Timer();
        t.schedule(new TimerTask() {
            public void run(){
                cartPanel.setBackground(Color.white);
                cartPanel.repaint();
                cartPanel.revalidate();
            }
        },1500);
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Aqua".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IMat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        UIManager.getLookAndFeelDefaults()
        .put("defaultFont", new Font("Helvetica Neue", Font.PLAIN, 13));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IMat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JToggleButton candySnacksButton;
    private javax.swing.JLayeredPane cardCartListLayeredPane;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JLabel cartAmountLabel;
    private javax.swing.JPanel cartAndListsPanel;
    private javax.swing.JButton cartButton;
    private javax.swing.JPanel cartLayeredPanel;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JLabel cartPriceLabel;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JToggleButton dairyButton;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JToggleButton favoriteButton;
    private javax.swing.JMenu file;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JToggleButton freezerButton;
    private javax.swing.JToggleButton fruitVegetablesButton;
    private javax.swing.JCheckBoxMenuItem fullscreen;
    private javax.swing.ButtonGroup globalNavigationButtonGroup;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JToggleButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPanel listLayeredPanel;
    private javax.swing.JPanel listsPanel;
    private javax.swing.JLabel logotype;
    private javax.swing.JToggleButton meatFishButton;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem minimize;
    private javax.swing.JMenu navigate;
    private javax.swing.JPanel navigationPanel;
    private javax.swing.JButton nextButton;
    private javax.swing.JToggleButton pantryButton;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton profileButton;
    private javax.swing.JToggleButton receipeButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JMenuItem switchToNext;
    private javax.swing.JMenuItem switchToPrevious;
    private javax.swing.JButton tipsButton;
    private javax.swing.JMenuItem undo;
    private javax.swing.JMenu view;
    private javax.swing.JMenuItem zoomIn;
    private javax.swing.JMenuItem zoomOut;
    // End of variables declaration//GEN-END:variables

}
