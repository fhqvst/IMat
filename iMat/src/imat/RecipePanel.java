/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import javax.swing.DefaultListModel;
import se.chalmers.ait.dat215.project.IMatDataHandler;
import se.chalmers.ait.dat215.project.Product;
import se.chalmers.ait.dat215.project.ShoppingItem;

/**
 *
 * @author kakan
 */
public class RecipePanel extends javax.swing.JPanel implements java.beans.Customizer {
    
    private Object bean;
    private DefaultListModel updateListModel;
    IMatDataHandler dataHandler = IMatDataHandler.getInstance();

    /**
     * Creates new customizer recipePanel
     */
    public RecipePanel() {
        initComponents();
        //updateListModel = new DefaultListModel();
        //recipeSelectList.setModel(updateListModel);
        
        Product product1 = dataHandler.findProducts("Köttfärs nöt").get(0);
        Product product2 = dataHandler.findProducts("Jasmin-ris").get(0);
        
        jCheckBox1.setText(recipePortionsSlider.getValue() + " kg Köttfärs nöt, " + Math.round(product1.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
        jCheckBox2.setText(recipePortionsSlider.getValue() + " kg Jasmin-ris, " + Math.round(product2.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
        
        totalLabel.setText("Total: " + Math.round(product1.getPrice()*recipePortionsSlider.getValue()*100 + product2.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recipePanel = new javax.swing.JPanel();
        recipeResultPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        recipePortionsSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        totalLabel = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        recipeSearchAndSelectPanel = new javax.swing.JPanel();
        receipeSearchPanel = new javax.swing.JPanel();
        receipeSearchTitle = new javax.swing.JLabel();
        recipeSearchWord = new javax.swing.JLabel();
        recipeSearchWordTextField = new javax.swing.JTextField();
        recipeSearchMaxPrice = new javax.swing.JLabel();
        recipeSearchMaxPriceTextField = new javax.swing.JTextField();
        recipeSearchMaxTime = new javax.swing.JLabel();
        recipeSearchMaxTimeSlider = new javax.swing.JSlider();

        setLayout(new java.awt.BorderLayout());

        recipePanel.setLayout(new java.awt.BorderLayout());

        recipeResultPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));

        jLabel1.setText("Ninjabiffar med ris");

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("4  kg Köttfärs nöt");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setSelected(true);
        jCheckBox2.setText("4 kg Jasmin-risi");

        recipePortionsSlider.setBackground(new java.awt.Color(255, 255, 255));
        recipePortionsSlider.setMajorTickSpacing(1);
        recipePortionsSlider.setMaximum(8);
        recipePortionsSlider.setMinimum(1);
        recipePortionsSlider.setPaintLabels(true);
        recipePortionsSlider.setPaintTicks(true);
        recipePortionsSlider.setToolTipText("");
        recipePortionsSlider.setValue(4);
        recipePortionsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                recipePortionsSliderStateChanged(evt);
            }
        });

        jLabel2.setText("Portioner:");

        jButton1.setText("Lägg till i varukorg");
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        totalLabel.setText("Totalt: 0kr");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Nam venenatis nisl at sem blandit, at laoreet sapien auctor. Fusce hendrerit leo sit amet suscipit vestibulum. Integer sem nulla, sollicitudin at nunc sit amet, commodo imperdiet nunc. Aliquam congue ligula eget urna interdum, sit amet lacinia ipsum suscipit. Cras vitae aliquam ante, quis dictum metus. Morbi auctor rhoncus sodales. Etiam malesuada velit ac ligula dapibus, ornare porttitor velit consectetur.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setFocusable(false);
        jTextArea1.setMinimumSize(new java.awt.Dimension(0, 0));
        jTextArea1.setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(recipePortionsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jCheckBox2)
                    .addComponent(totalLabel)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recipePortionsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout recipeResultPanelLayout = new javax.swing.GroupLayout(recipeResultPanel);
        recipeResultPanel.setLayout(recipeResultPanelLayout);
        recipeResultPanelLayout.setHorizontalGroup(
            recipeResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        recipeResultPanelLayout.setVerticalGroup(
            recipeResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recipeResultPanelLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        recipePanel.add(recipeResultPanel, java.awt.BorderLayout.CENTER);

        recipeSearchAndSelectPanel.setBackground(new java.awt.Color(255, 255, 255));
        recipeSearchAndSelectPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 1, new java.awt.Color(102, 102, 102)));
        recipeSearchAndSelectPanel.setPreferredSize(new java.awt.Dimension(400, 100));
        recipeSearchAndSelectPanel.setLayout(new java.awt.GridLayout(2, 0));

        receipeSearchPanel.setBackground(new java.awt.Color(255, 255, 255));
        receipeSearchPanel.setPreferredSize(new java.awt.Dimension(0, 0));

        receipeSearchTitle.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        receipeSearchTitle.setText("Sök recept");

        recipeSearchWord.setText("Sökord");

        recipeSearchMaxPrice.setText("Max pris (kr)");

        recipeSearchMaxTime.setText("Tillagningstid");
        recipeSearchMaxTime.setToolTipText("Välj maximal tillagningstid");

        recipeSearchMaxTimeSlider.setBackground(new java.awt.Color(255, 255, 255));
        recipeSearchMaxTimeSlider.setMajorTickSpacing(30);
        recipeSearchMaxTimeSlider.setMaximum(180);
        recipeSearchMaxTimeSlider.setPaintLabels(true);
        recipeSearchMaxTimeSlider.setPaintTicks(true);
        recipeSearchMaxTimeSlider.setToolTipText("");
        recipeSearchMaxTimeSlider.setValue(90);

        javax.swing.GroupLayout receipeSearchPanelLayout = new javax.swing.GroupLayout(receipeSearchPanel);
        receipeSearchPanel.setLayout(receipeSearchPanelLayout);
        receipeSearchPanelLayout.setHorizontalGroup(
            receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                                .addComponent(recipeSearchMaxTime)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recipeSearchMaxTimeSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                            .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(recipeSearchMaxPrice)
                                    .addComponent(recipeSearchWord))
                                .addGap(24, 24, 24)
                                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(recipeSearchWordTextField)
                                    .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                                        .addComponent(recipeSearchMaxPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                        .addComponent(receipeSearchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        receipeSearchPanelLayout.setVerticalGroup(
            receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(receipeSearchTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipeSearchWord)
                    .addComponent(recipeSearchWordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recipeSearchMaxPrice)
                    .addComponent(recipeSearchMaxPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(receipeSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(recipeSearchMaxTime))
                    .addGroup(receipeSearchPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recipeSearchMaxTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        recipeSearchAndSelectPanel.add(receipeSearchPanel);

        recipePanel.add(recipeSearchAndSelectPanel, java.awt.BorderLayout.WEST);

        add(recipePanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void recipePortionsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_recipePortionsSliderStateChanged
        Product product1 = dataHandler.findProducts("Köttfärs nöt").get(0);
        Product product2 = dataHandler.findProducts("Jasmin-ris").get(0);
        
        jCheckBox1.setText(recipePortionsSlider.getValue() + " kg Köttfärs nöt, " + Math.round(product1.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
        jCheckBox2.setText(recipePortionsSlider.getValue() + " kg Jasmin-ris, " + Math.round(product2.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
        totalLabel.setText("Total: " + Math.round(product1.getPrice()*recipePortionsSlider.getValue()*100 + product2.getPrice()*recipePortionsSlider.getValue()*100)/100 + " kr");
    }//GEN-LAST:event_recipePortionsSliderStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jCheckBox1.isSelected()){
            //dataHandler.getShoppingCart().addProduct(dataHandler.findProducts("Köttfärs nöt").get(0), recipePortionsSlider.getValue());
            Product product = dataHandler.findProducts("Köttfärs nöt").get(0);
            
            boolean exists = false;
                
            for(int i = 0; i < dataHandler.getShoppingCart().getItems().size(); i++){
                ShoppingItem temp = dataHandler.getShoppingCart().getItems().get(i);
                if(temp.getProduct() == product){
                    temp.setAmount(temp.getAmount() + recipePortionsSlider.getValue());
                    dataHandler.getShoppingCart().fireShoppingCartChanged(temp, true);
                    exists = true;
                    break;
                }
            }
            
            if(!exists){
                dataHandler.getShoppingCart().addProduct(product, recipePortionsSlider.getValue());
            }
        }
        
        if(jCheckBox2.isSelected()){
            //dataHandler.getShoppingCart().addProduct(dataHandler.findProducts("Spaghetti").get(0), recipePortionsSlider.getValue());
            
            Product product = dataHandler.findProducts("Jasmin-ris").get(0);
            
            boolean exists = false;
                
            for(int i = 0; i < dataHandler.getShoppingCart().getItems().size(); i++){
                ShoppingItem temp = dataHandler.getShoppingCart().getItems().get(i);
                if(temp.getProduct() == product){
                    temp.setAmount(temp.getAmount() + recipePortionsSlider.getValue());
                    dataHandler.getShoppingCart().fireShoppingCartChanged(temp, true);
                    exists = true;
                    break;
                }
            }
            
            if(!exists){
                dataHandler.getShoppingCart().addProduct(product, recipePortionsSlider.getValue());
            }
        }
        
        
        
        ((IMat)this.getTopLevelAncestor()).getLayeredPane().moveToFront(((IMat)this.getTopLevelAncestor()).getCardPanel());
        ((IMat)this.getTopLevelAncestor()).getLayeredPane().moveToBack(((IMat)this.getTopLevelAncestor()).getCartPanel());
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel receipeSearchPanel;
    private javax.swing.JLabel receipeSearchTitle;
    private javax.swing.JPanel recipePanel;
    private javax.swing.JSlider recipePortionsSlider;
    private javax.swing.JPanel recipeResultPanel;
    private javax.swing.JPanel recipeSearchAndSelectPanel;
    private javax.swing.JLabel recipeSearchMaxPrice;
    private javax.swing.JTextField recipeSearchMaxPriceTextField;
    private javax.swing.JLabel recipeSearchMaxTime;
    private javax.swing.JSlider recipeSearchMaxTimeSlider;
    private javax.swing.JLabel recipeSearchWord;
    private javax.swing.JTextField recipeSearchWordTextField;
    private javax.swing.JLabel totalLabel;
    // End of variables declaration//GEN-END:variables
}
