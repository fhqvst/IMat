/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JCheckBox;
import se.chalmers.ait.dat215.project.*;

/**
 *
 * @author kakan
 */
public class FilterPanel extends javax.swing.JPanel implements java.beans.Customizer {
    
    private Object bean;
    private final String title;
    private String[] checkBoxTitles;
    private JCheckBox[] filterBoxes;
    IMatDataHandler dataHandler = IMatDataHandler.getInstance();

    /**
     * Creates new customizer AbstractFilterCard
     */
    public FilterPanel(String title, String[] array) {
        initComponents();
        
        this.title = title;
        this.checkBoxTitles = array;
        filterBoxes = new JCheckBox[array.length];
        
        filterPanel.setLayout(new GridLayout(0,1));
        
        setFilterBoxesFromString();
        setFilterBoxesToPanel();
        setTitle();
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }
    
    private void setTitle() {
        titleLable.setText(title);
    }
    
    private void setFilterBoxesFromString() {
        for(int i=0; i<checkBoxTitles.length; i++ ) {
            filterBoxes[i] = new JCheckBox(checkBoxTitles[i]);
            filterBoxes[i].setSelected(true);
        }
    }
    private void setFilterBoxesToPanel() {
        for(JCheckBox n : filterBoxes) {
            filterPanel.add(n);
        }
    }
    
    private ProductCategory stringToCategory(String s){
        switch(s) {
            case "Nötkött": case "Fläskkött": return ProductCategory.MEAT;
            case "Fisk": return ProductCategory.FISH;
            case "Mjölk": return ProductCategory.DAIRIES;
            default: return ProductCategory.FISH;
        }
    }
    
    protected List<Product> getSelected() {
        List<Product> productsShown = new ArrayList<Product>();
        for(int i = 0; i<filterBoxes.length; i++) {
            if(filterBoxes[i].isSelected()) {
                productsShown.addAll(dataHandler.getProducts(stringToCategory(checkBoxTitles[i])));
            }
        }
        return productsShown;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLable = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        filterPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        titleLable.setText("Title");

        jLabel1.setText("Max Kr/Kg");

        jButton1.setText("Filter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(titleLable)
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel filterPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel titleLable;
    // End of variables declaration//GEN-END:variables
}
